<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.varc.brewnetapp.domain.returning.query.mapper.ReturningMapper">

    <!-- ========== resultMap ========== -->

    <!-- 본사 반품요청 목록조회 ResultMap -->
    <resultMap id="returningListResultMap" type="com.varc.brewnetapp.domain.returning.query.aggregate.vo.ReturningListVO">
        <result property="returningCode" column="return_code"/>
        <result property="franchiseName" column="franchise_name"/>
        <result property="itemName" column="item_name"/>
        <result property="reason" column="reason"/>
        <result property="memberCode" column="member_name"/>
        <result property="createdAt" column="created_at"/>
        <result property="status" column="status"/>
        <result property="approvalStatus" column="approval_status"/>
    </resultMap>

    <!-- 본사 반품요청 상세조회 - 물품조회 ResultMap -->
    <resultMap id="returningDetailItemResultMap" type="com.varc.brewnetapp.domain.returning.query.aggregate.vo.ReturningItemVO">
        <result property="itemUniqueCode" column="item_unique_code"/>
        <result property="itemName" column="item_name"/>
        <result property="superCategory" column="super_category"/>
        <result property="subCategory" column="sub_category"/>
        <result property="quantity" column="quantity"/>
    </resultMap>

    <!-- 본사 반품요청 상세조회 ResultMap -->
    <resultMap id="returningDetailResultMap" type="com.varc.brewnetapp.domain.returning.query.aggregate.vo.ReturningDetailVO">
        <id property="returningCode" column="return_code" />
        <result property="createdAt" column="created_at"/>
        <result property="franchiseName" column="franchise_name"/>
        <result property="reason" column="reason"/>
        <result property="memberName" column="member_name"/>
        <result property="comment" column="comment"/>
        <result property="explanation" column="explanation"/>

        <!-- 반품 물품 리스트 매핑 -->
        <collection property="returningItemList" ofType="com.varc.brewnetapp.domain.returning.query.aggregate.vo.ReturningItemVO"
                    select="selectReturningDetailItemBy" column="return_code"/>

        <!-- 반품 이미지 리스트 매핑 -->
        <collection property="returningImageList" ofType="java.lang.String"
                    select="selectReturningDetailImageBy" column="return_code"/>
    </resultMap>

    <!-- 본사 반품 결재진행상황 조회 ResultMap-->
    <resultMap id="returningApproverResultMap" type="com.varc.brewnetapp.domain.returning.query.aggregate.vo.ReturningApproverVO">
        <result property="approverName" column="approver_name"/>
        <result property="position" column="position"/>
        <result property="approval" column="approval"/>
        <result property="createdAt" column="created_at"/>
    </resultMap>

    <!-- 가맹점 반품요청 목록조회 ResultMap -->
    <resultMap id="franReturningListResultMap" type="com.varc.brewnetapp.domain.returning.query.aggregate.vo.FranReturningListVO">
        <result property="returningCode" column="return_code"/>
        <result property="status" column="status"/>
        <result property="orderCode" column="order_code"/>
        <result property="itemName" column="item_name"/>
        <result property="sumPrice" column="sum_price"/>
        <result property="createdAt" column="created_at"/>
        <result property="completedAt" column="completed_at"/>
    </resultMap>

    <!-- 가맹점 반품요청 상세조회 - 물품 리스트 ResultMap -->
    <resultMap id="franReturningDetailItemResultMap" type="com.varc.brewnetapp.domain.returning.query.aggregate.vo.FranReturningItemVO">
        <result property="itemCode" column="item_code"/>
        <result property="itemUniqueCode" column="item_unique_code"/>
        <result property="itemName" column="item_name"/>
        <result property="quantity" column="quantity"/>
        <result property="sellingPrice" column="selling_price"/>
        <result property="partSumPrice" column="part_sum_price"/>
    </resultMap>

    <!-- 가맹점 반품요청 상세조회 ResultMap -->
    <resultMap id="franReturningDetailResultMap" type="com.varc.brewnetapp.domain.returning.query.aggregate.vo.FranReturningDetailVO">
        <id property="returningCode" column="return_code" />
        <result property="createdAt" column="created_at"/>
        <result property="status" column="status"/>
        <result property="orderCode" column="order_code"/>
<!--        <result property="totalSumPrice" column="total_sum_price"/>-->
        <result property="reason" column="reason"/>
        <result property="explanation" column="explanation"/>

        <!-- 반품 물품 리스트 매핑 -->
        <collection property="returningItemList" ofType="com.varc.brewnetapp.domain.returning.query.aggregate.vo.FranReturningItemVO"
                    select="selectFranReturningDetailItemBy" column="return_code"/>

        <!-- 반품 이미지 리스트 매핑 -->
        <collection property="returningImageList" ofType="java.lang.String"
                    select="selectReturningDetailImageBy" column="return_code"/>
    </resultMap>

    <!-- 가맹점 반품요청 상태조회 ResultMap -->
    <resultMap id="franReturningStatusResultMap" type="com.varc.brewnetapp.domain.returning.query.aggregate.vo.FranReturningStatusVO">
        <result property="status" column="status"/>
        <result property="processedAt" column="processed_at"/>
    </resultMap>

    <!-- 타부서 반품요청 조회/검색 ResultMap  -->
    <resultMap id="returningHistoryListResultMap" type="com.varc.brewnetapp.domain.returning.query.aggregate.vo.ReturningHistoryVO">
        <id property="returningStockHistoryCode" column="return_stock_history_code"/>
        <result property="status" column="status"/>
        <result property="manager" column="manager"/>
        <result property="createdAt" column="created_at"/>
        <result property="confirmed" column="confirmed"/>
        <result property="returningCode" column="return_code"/>
        <result property="returningManager" column="return_manager"/>
    </resultMap>

    <!-- 타부서 환불요청 조회/검색 ResultMap  -->
    <resultMap id="refundHistoryListResultMap" type="com.varc.brewnetapp.domain.returning.query.aggregate.vo.RefundHistoryVO">
        <id property="returningRefundHistoryCode" column="return_refund_history_code"/>
        <result property="status" column="status"/>
        <result property="manager" column="manager"/>
        <result property="createdAt" column="created_at"/>
        <result property="confirmed" column="confirmed"/>
        <result property="returningCode" column="return_code"/>
        <result property="returningManager" column="return_manager"/>
    </resultMap>

    <!-- 타부서 반품요청 상세조회 -->
    <resultMap id="ReturningHistoryDetailResultMap" type="com.varc.brewnetapp.domain.returning.query.aggregate.vo.ReturningHistoryDetailVO">
        <id property="returningStockHistoryCode" column="return_stock_history_code"/>
        <result property="returningCreatedAt" column="return_created_at"/>
        <result property="franchiseName" column="franchise_name"/>
        <result property="reason" column="reason"/>
        <result property="returningManager" column="return_manager"/>
        <result property="comment" column="comment"/>
        <result property="createdAt" column="created_at"/>
        <result property="status" column="status"/>
        <result property="manager" column="manager"/>

        <!-- 타부서 반품처리완료내역 물품 리스트 매핑 -->
        <collection property="returningHistoryItemList" ofType="com.varc.brewnetapp.domain.returning.query.aggregate.vo.ReturningHistoryItemVO"
                    select="selectReturningHistoryDetailItemBy" column="return_stock_history_code"/>
    </resultMap>

    <!-- 타부서 반품처리완료내역 물품 ResultMap -->
    <resultMap id="returningHistoryDetailItemResultMap" type="com.varc.brewnetapp.domain.returning.query.aggregate.vo.ReturningHistoryItemVO">
        <result property="itemUniqueCode" column="item_unique_code"/>
        <result property="itemName" column="item_name"/>
        <result property="superCategory" column="super_category"/>
        <result property="subCategory" column="sub_category"/>
        <result property="quantity" column="quantity"/>
        <result property="restockQuantity" column="restock_quantity"/>
    </resultMap>

    <!-- 타부서 환불요청 상세조회 -->
    <resultMap id="RefundHistoryDetailResultMap" type="com.varc.brewnetapp.domain.returning.query.aggregate.vo.RefundHistoryDetailVO">
        <id property="returningRefundHistoryCode" column="return_refund_history_code"/>
        <result property="returningCreatedAt" column="return_created_at"/>
        <result property="franchiseName" column="franchise_name"/>
        <result property="reason" column="reason"/>
        <result property="returningManager" column="return_manager"/>
        <result property="comment" column="comment"/>
        <result property="createdAt" column="created_at"/>
        <result property="status" column="status"/>
        <result property="manager" column="manager"/>

        <!-- 타부서 환불처리완료내역 물품 리스트 매핑 -->
        <collection property="refundHistoryItemList" ofType="com.varc.brewnetapp.domain.returning.query.aggregate.vo.RefundHistoryItemVO"
                    select="selectRefundHistoryDetailItemBy" column="return_refund_history_code"/>
    </resultMap>

    <!-- 타부서 환불처리완료내역 물품 ResultMap -->
    <resultMap id="refundHistoryDetailItemResultMap" type="com.varc.brewnetapp.domain.returning.query.aggregate.vo.RefundHistoryItemVO">
        <result property="itemUniqueCode" column="item_unique_code"/>
        <result property="itemName" column="item_name"/>
        <result property="superCategory" column="super_category"/>
        <result property="subCategory" column="sub_category"/>
        <result property="quantity" column="quantity"/>
        <result property="refundPrice" column="refund_price"/>
        <result property="completed" column="completed"/>
    </resultMap>

    <!-- ========== Query ========== -->

    <!-- ===== Query 1. 본사 반품내역 ===== -->

    <!-- 본사 반품내역 목록조회 페이지네이션용 cnt 쿼리 -->
    <select id="selectReturningListCnt" resultType="int">
        SELECT
              COUNT(*)
          FROM (
                 SELECT
                        A.return_code
                      , C.franchise_name
                      , GROUP_CONCAT(E.name SEPARATOR ', ') AS item_name
                      , A.reason
                      , F.name AS member_name
                      , A.created_at
                      , G.status
                      , A.approval_status
                   FROM tbl_return A
                        JOIN tbl_order B ON A.order_code = B.order_code
                        JOIN tbl_franchise C ON B.franchise_code = C.franchise_code
                        JOIN tbl_return_item D ON A.return_code = D.return_code
                        JOIN tbl_item E ON D.item_code = E.item_code
                        LEFT JOIN tbl_member F ON A.member_code = F.member_code
                        JOIN tbl_return_status_history G ON A.return_code = G.return_code
                        JOIN (
                               SELECT return_code, MAX(created_at) AS max_created_at
                               FROM tbl_return_status_history
                               GROUP BY return_code
                        ) latest_status ON G.return_code = latest_status.return_code
                          AND G.created_at = latest_status.max_created_at
                    GROUP BY A.return_code
                 ) As grouped_result;
    </select>

    <!-- 본사 반품내역 목록조회 쿼리 -->
    <select id="selectReturningList" resultMap="returningListResultMap">
        SELECT
              A.return_code
              , C.franchise_name
              , GROUP_CONCAT(E.name SEPARATOR ', ') AS item_name
              , A.reason
              , F.name AS member_name
              , A.created_at
              , G.status
              , A.approval_status
         FROM tbl_return A
              JOIN tbl_order B ON A.order_code = B.order_code
              JOIN tbl_franchise C ON B.franchise_code = C.franchise_code
              JOIN tbl_return_item D ON A.return_code = D.return_code
              JOIN tbl_item E ON D.item_code = E.item_code
              LEFT JOIN tbl_member F ON A.member_code = F.member_code
              JOIN tbl_return_status_history G ON A.return_code = G.return_code
              JOIN (
                    SELECT return_code, MAX(created_at) AS max_created_at
                    FROM tbl_return_status_history
                    GROUP BY return_code
                    ) latest_status ON G.return_code = latest_status.return_code
          AND G.created_at = latest_status.max_created_at
        GROUP BY A.return_code, A.created_at
        ORDER BY A.created_at DESC
        LIMIT #{ offset }, #{ pageSize };
    </select>

    <!-- 본사 엑셀출력용 반품내역 목록조회(전체/검색상태 반영) 쿼리 -->
    <select id="selectExcelReturningList" resultMap="returningListResultMap">
        SELECT
        A.return_code
        , C.franchise_name
        , GROUP_CONCAT(E.name SEPARATOR ', ') AS item_name
        , A.reason
        , F.name AS member_name
        , A.created_at
        , G.status
        , A.approval_status
        FROM tbl_return A
        JOIN tbl_order B ON A.order_code = B.order_code
        JOIN tbl_franchise C ON B.franchise_code = C.franchise_code
        JOIN tbl_return_item D ON A.return_code = D.return_code
        JOIN tbl_item E ON D.item_code = E.item_code
        JOIN tbl_member F ON A.member_code = F.member_code
        JOIN tbl_return_status_history G ON A.return_code = G.return_code
        JOIN (
        SELECT return_code, MAX(created_at) AS max_created_at
        FROM tbl_return_status_history
        GROUP BY return_code
        ) latest_status ON G.return_code = latest_status.return_code
        AND G.created_at = latest_status.max_created_at
        <where>
            <choose>
                <when test="searchFilter == 'returningCode'">
                    AND CAST(A.return_code AS CHAR) LIKE CONCAT('%', #{ searchWord }, '%')
                </when>
                <when test="searchFilter == 'franchiseName'">
                    AND C.franchise_name LIKE CONCAT('%', #{ searchWord }, '%')
                </when>
                <when test="searchFilter == 'managerName'">
                    AND F.name LIKE CONCAT('%', #{ searchWord }, '%')
                </when>
            </choose>
            <if test="startDate != null and endDate != null">
                AND A.created_at BETWEEN #{ startDate } AND CONCAT(#{ endDate }, ' 23:59:59')
            </if>
        </where>
        GROUP BY A.return_code, C.franchise_name, A.reason, F.name, A.created_at, G.status, A.approval_status
        ORDER BY A.created_at DESC
    </select>

    <!-- 본사 미결재된 반품내역 목록조회 페이지네이션용 cnt 쿼리 -->
    <select id="selectRequestedReturningListCnt" resultType="int">
        SELECT
                COUNT(*)
          FROM (
                SELECT
                      A.return_code
         FROM tbl_return A
              JOIN tbl_order B ON A.order_code = B.order_code
              JOIN tbl_franchise C ON B.franchise_code = C.franchise_code
              JOIN tbl_return_item D ON A.return_code = D.return_code
              JOIN tbl_item E ON D.item_code = E.item_code
              LEFT JOIN tbl_member F ON A.member_code = F.member_code
              JOIN tbl_return_status_history G ON A.return_code = G.return_code
              JOIN (
                    SELECT return_code, MAX(created_at) AS max_created_at
                    FROM tbl_return_status_history
                    GROUP BY return_code
                    ) latest_status ON G.return_code = latest_status.return_code
                AND G.created_at = latest_status.max_created_at
              WHERE G.status = 'REQUESTED'
              GROUP BY A.return_code, A.created_at ) AS grouped_results;
    </select>

    <!-- 본사 미결재된 반품내역 목록조회 쿼리 -->
    <select id="selectRequestedReturningList" resultMap="returningListResultMap">
        SELECT
                A.return_code
              , C.franchise_name
              , GROUP_CONCAT(E.name SEPARATOR ', ') AS item_name
              , A.reason
              , F.name AS member_name
              , A.created_at
              , G.status
              , A.approval_status
         FROM tbl_return A
              JOIN tbl_order B ON A.order_code = B.order_code
              JOIN tbl_franchise C ON B.franchise_code = C.franchise_code
              JOIN tbl_return_item D ON A.return_code = D.return_code
              JOIN tbl_item E ON D.item_code = E.item_code
              LEFT JOIN tbl_member F ON A.member_code = F.member_code
              JOIN tbl_return_status_history G ON A.return_code = G.return_code
              JOIN (
                    SELECT return_code, MAX(created_at) AS max_created_at
                    FROM tbl_return_status_history
                    GROUP BY return_code
                    ) latest_status ON G.return_code = latest_status.return_code
          AND G.created_at = latest_status.max_created_at
        WHERE G.status = 'REQUESTED'
        GROUP BY A.return_code, A.created_at
        ORDER BY A.created_at DESC
        LIMIT #{ offset }, #{ pageSize };
    </select>

    <!-- 본사 반품내역 검색 페이지네이션용 cnt 쿼리 -->
    <select id="selectSearchReturningListCnt" resultType="int">
        SELECT
        COUNT(*)
        FROM
        (
        SELECT
        A.return_code
        , C.franchise_name
        , GROUP_CONCAT(E.name SEPARATOR ', ') AS item_name
        , A.reason
        , F.name AS member_name
        , A.created_at
        , G.status
        , A.approval_status
        FROM tbl_return A
        JOIN tbl_order B ON A.order_code = B.order_code
        JOIN tbl_franchise C ON B.franchise_code = C.franchise_code
        JOIN tbl_return_item D ON A.return_code = D.return_code
        JOIN tbl_item E ON D.item_code = E.item_code
        JOIN tbl_member F ON A.member_code = F.member_code
        JOIN tbl_return_status_history G ON A.return_code = G.return_code
        JOIN (
        SELECT return_code, MAX(created_at) AS max_created_at
        FROM tbl_return_status_history
        GROUP BY return_code
        ) latest_status ON G.return_code = latest_status.return_code
        AND G.created_at = latest_status.max_created_at
        <where>
            <choose>
                <when test="searchFilter == 'returningCode'">
                    AND CAST(A.return_code AS CHAR) LIKE CONCAT('%', #{ searchWord }, '%')
                </when>
                <when test="searchFilter == 'franchiseName'">
                    AND C.franchise_name LIKE CONCAT('%', #{ searchWord }, '%')
                </when>
                <when test="searchFilter == 'managerName'">
                    AND F.name LIKE CONCAT('%', #{ searchWord }, '%')
                </when>
            </choose>
            <if test="startDate != null and endDate != null">
                AND A.created_at BETWEEN #{ startDate } AND CONCAT(#{ endDate }, ' 23:59:59')
            </if>
        </where>
        GROUP BY A.return_code)  AS grouped_results;
    </select>

    <!-- 본사 반품내역 검색 쿼리 -->
    <select id="selectSearchReturningList" resultMap="returningListResultMap">
        SELECT
        A.return_code
        , C.franchise_name
        , GROUP_CONCAT(E.name SEPARATOR ', ') AS item_name
        , A.reason
        , F.name AS member_name
        , A.created_at
        , G.status
        , A.approval_status
        FROM tbl_return A
        JOIN tbl_order B ON A.order_code = B.order_code
        JOIN tbl_franchise C ON B.franchise_code = C.franchise_code
        JOIN tbl_return_item D ON A.return_code = D.return_code
        JOIN tbl_item E ON D.item_code = E.item_code
        JOIN tbl_member F ON A.member_code = F.member_code
        JOIN tbl_return_status_history G ON A.return_code = G.return_code
        JOIN (
        SELECT return_code, MAX(created_at) AS max_created_at
        FROM tbl_return_status_history
        GROUP BY return_code
        ) latest_status ON G.return_code = latest_status.return_code
        AND G.created_at = latest_status.max_created_at
        <where>
            <choose>
                <when test="searchFilter == 'returningCode'">
                    AND CAST(A.return_code AS CHAR) LIKE CONCAT('%', #{ searchWord }, '%')
                </when>
                <when test="searchFilter == 'franchiseName'">
                    AND C.franchise_name LIKE CONCAT('%', #{ searchWord }, '%')
                </when>
                <when test="searchFilter == 'managerName'">
                    AND F.name LIKE CONCAT('%', #{ searchWord }, '%')
                </when>
            </choose>
            <if test="startDate != null and endDate != null">
                AND A.created_at BETWEEN #{ startDate } AND CONCAT(#{ endDate }, ' 23:59:59')
            </if>
        </where>
        GROUP BY A.return_code, C.franchise_name, A.reason, F.name, A.created_at, G.status, A.approval_status
        ORDER BY A.created_at DESC
        LIMIT #{ offset }, #{ pageSize };
    </select>


    <!-- 본사 반품내역 상세조회 쿼리 -->
    <select id="selectReturningDetailBy" resultMap="returningDetailResultMap">
        SELECT
        A.return_code
        , A.created_at
        , C.franchise_name
        , A.reason
        , D.name AS member_name
        , A.comment
        , A.explanation
        FROM tbl_return A
        JOIN tbl_order B ON A.order_code = B.order_code
        JOIN tbl_franchise C ON B.franchise_code = C.franchise_code
        LEFT JOIN tbl_member D ON A.member_code = D.member_code
        WHERE A.return_code = #{ returningCode };
    </select>

    <!-- 반품내역 상세조회 - 이미지 목록 조회 쿼리 -->
    <select id="selectReturningDetailImageBy" resultType="string">
        SELECT
        A.imag_url
        FROM tbl_return_img A
        WHERE A.return_code = #{ returningCode };
    </select>

    <!-- 반품내역 상세조회 - 물품 목록 조회 쿼리 -->
    <select id="selectReturningDetailItemBy" resultMap="returningDetailItemResultMap">
        SELECT
        B.item_unique_code
        , B.name AS item_name
        , C.name AS sub_category
        , D.name AS super_category
        , A.quantity
        FROM tbl_return_item A
        JOIN tbl_item B ON A.item_code = B.item_code
        JOIN tbl_sub_category C ON B.category_code = C.sub_category_code
        JOIN tbl_super_category D ON C.super_category_code = D.super_category_code
        WHERE A.return_code = #{ returningCode };
    </select>


    <!-- 반품코드로 결재상황을 조회하기 위해 사용하는 쿼리 -->
    <!-- (본사)반품상세보기 페이지 - '결재진행상황' 버튼 클릭 시 사용 -->
    <select id="selectReturningApproverBy" resultMap="returningApproverResultMap">
        SELECT
        B.name AS approver_name
        , C.name AS position
        , A.approved AS approval
        , A.created_at
        , A.comment
        FROM tbl_return_approver A
        JOIN tbl_member B ON A.member_code = B.member_code
        JOIN tbl_position C ON B.position_code = C.position_code
        WHERE return_code = #{ returningCode } AND A.active != false;
    </select>

    <!-- ===== Query 2. 타부서 반품내역 ===== -->


    <!-- 타부서 반품처리완료내역 조회/검색 페이지네이션용 cnt 쿼리 -->
    <select id="selectReturningHistoryListCnt" resultType="int">
        SELECT
           COUNT(*)
        FROM (
        SELECT
        A.return_stock_history_code
        , A.status
        , A.manager
        , A.created_at
        , A.confirmed
        , A.return_code
        , C.name AS return_manager
        FROM tbl_return_stock_history A
        JOIN tbl_return B ON A.return_code = B.return_code
        JOIN tbl_member C ON B.member_code = C.member_code
        <where>
            <choose>
                <when test="searchFilter == 'code'">
                    AND CAST(A.return_stock_history_code AS CHAR) LIKE CONCAT('%', #{ searchWord }, '%')
                </when>
                <when test="searchFilter == 'manager'">
                    AND A.manager LIKE CONCAT('%', #{ searchWord }, '%')
                </when>
                <when test="searchFilter == 'returningCode'">
                    AND CAST(A.return_code AS CHAR) LIKE CONCAT('%', #{ searchWord }, '%')
                </when>
                <when test="searchFilter == 'returningManager'">
                    AND C.name LIKE CONCAT('%', #{ searchWord }, '%')
                </when>
            </choose>
            <if test="startDate != null and endDate != null">
                AND A.created_at BETWEEN #{ startDate } AND CONCAT(#{ endDate }, ' 23:59:59')
            </if>
        </where>
        ) AS grouped_result;
    </select>

    <!-- 타부서 반품처리완료내역 조회/검색 쿼리 -->
    <select id="selectReturningHistoryList" resultMap="returningHistoryListResultMap">
        SELECT
        A.return_stock_history_code
        , A.status
        , A.manager
        , A.created_at
        , A.confirmed
        , A.return_code
        , C.name AS return_manager
        FROM tbl_return_stock_history A
        JOIN tbl_return B ON A.return_code = B.return_code
        JOIN tbl_member C ON B.member_code = C.member_code
        <where>
            <choose>
                <when test="searchFilter == 'code'">
                    AND CAST(A.return_stock_history_code AS CHAR) LIKE CONCAT('%', #{ searchWord }, '%')
                </when>
                <when test="searchFilter == 'manager'">
                    AND A.manager LIKE CONCAT('%', #{ searchWord }, '%')
                </when>
                <when test="searchFilter == 'returningCode'">
                    AND CAST(A.return_code AS CHAR) LIKE CONCAT('%', #{ searchWord }, '%')
                </when>
                <when test="searchFilter == 'returningManager'">
                    AND C.name LIKE CONCAT('%', #{ searchWord }, '%')
                </when>
            </choose>
            <if test="startDate != null and endDate != null">
                AND A.created_at BETWEEN #{ startDate } AND CONCAT(#{ endDate }, ' 23:59:59')
            </if>
        </where>
        ORDER BY A.created_at DESC
        LIMIT #{ offset }, #{ pageSize };
    </select>

    <!-- 타부서 반품처리완료내역 상세조회 쿼리 -->
    <select id="selectReturningHistoryDetailBy" resultMap="ReturningHistoryDetailResultMap">
        SELECT
             A.return_stock_history_code
            , B.created_at AS return_created_at
            , D.franchise_name
            , B.reason
            , E.name AS return_manager
            , A.comment
            , A.created_at
            , A.status
            , A.manager
         FROM tbl_return_stock_history A
              JOIN tbl_return B ON A.return_code = B.return_code
              JOIN tbl_order C ON B.order_code = C.order_code
              JOIN tbl_franchise D ON C.franchise_code = D.franchise_code
              JOIN tbl_member E ON B.member_code = E.member_code
        WHERE A.return_stock_history_code = #{ returnStockHistoryCode };
    </select>

    <!-- 타부서 반품처리완료내역 물품 쿼리 -->
    <select id="selectReturningHistoryDetailItemBy" resultMap="returningHistoryDetailItemResultMap">
        SELECT
              B.item_unique_code
            , B.name AS item_name
            , C.name AS sub_category
            , D.name AS super_category
            , A.quantity
            , A.restock_quantity
         FROM tbl_return_item_status A
              JOIN tbl_item B ON A.item_code = B.item_code
              JOIN tbl_sub_category C ON B.category_code = C.sub_category_code
              JOIN tbl_super_category D ON C.super_category_code = D.super_category_code
        WHERE A.return_stock_history_code = #{ returnStockHistoryCode };
    </select>

    <!-- 타부서 환불처리완료내역 조회/검색 페이지네이션용 cnt 쿼리 -->
    <select id="selectRefundHistoryListCnt" resultType="int">
        SELECT
        COUNT(*)
        FROM (
        SELECT
        A.return_refund_history_code
        , A.status
        , A.manager
        , A.created_at
        , A.confirmed
        , A.return_code
        , C.name AS return_manager
        FROM tbl_return_refund_history A
        JOIN tbl_return B ON A.return_code = B.return_code
        JOIN tbl_member C ON B.member_code = C.member_code
        <where>
            <choose>
                <when test="searchFilter == 'code'">
                    AND CAST(A.return_refund_history_code AS CHAR) LIKE CONCAT('%', #{ searchWord }, '%')
                </when>
                <when test="searchFilter == 'manager'">
                    AND A.manager LIKE CONCAT('%', #{ searchWord }, '%')
                </when>
                <when test="searchFilter == 'returningCode'">
                    AND CAST(A.return_code AS CHAR) LIKE CONCAT('%', #{ searchWord }, '%')
                </when>
                <when test="searchFilter == 'returningManager'">
                    AND C.name LIKE CONCAT('%', #{ searchWord }, '%')
                </when>
            </choose>
            <if test="startDate != null and endDate != null">
                AND A.created_at BETWEEN #{ startDate } AND CONCAT(#{ endDate }, ' 23:59:59')
            </if>
        </where>
        ) AS grouped_result;
    </select>

    <!-- 타부서 환불처리완료내역 조회/검색 쿼리 -->
    <select id="selectRefundHistoryList" resultMap="refundHistoryListResultMap">
        SELECT
        A.return_refund_history_code
        , A.status
        , A.manager
        , A.created_at
        , A.confirmed
        , A.return_code
        , C.name AS return_manager
        FROM tbl_return_refund_history A
        JOIN tbl_return B ON A.return_code = B.return_code
        JOIN tbl_member C ON B.member_code = C.member_code
        <where>
            <choose>
                <when test="searchFilter == 'code'">
                    AND CAST(A.return_refund_history_code AS CHAR) LIKE CONCAT('%', #{ searchWord }, '%')
                </when>
                <when test="searchFilter == 'manager'">
                    AND A.manager LIKE CONCAT('%', #{ searchWord }, '%')
                </when>
                <when test="searchFilter == 'returningCode'">
                    AND CAST(A.return_code AS CHAR) LIKE CONCAT('%', #{ searchWord }, '%')
                </when>
                <when test="searchFilter == 'returningManager'">
                    AND C.name LIKE CONCAT('%', #{ searchWord }, '%')
                </when>
            </choose>
            <if test="startDate != null and endDate != null">
                AND A.created_at BETWEEN #{ startDate } AND CONCAT(#{ endDate }, ' 23:59:59')
            </if>
        </where>
        ORDER BY A.created_at DESC
        LIMIT #{ offset }, #{ pageSize };
    </select>

    <!-- 타부서 환불처리완료내역 상세조회 쿼리 -->
    <select id="selectRefundHistoryDetailBy" resultMap="RefundHistoryDetailResultMap">
        SELECT
            A.return_refund_history_code
            , B.created_at AS return_created_at
            , D.franchise_name
            , B.reason
            , E.name AS return_manager
            , A.comment
            , A.created_at
            , A.status
            , A.manager
         FROM tbl_return_refund_history A
              JOIN tbl_return B ON A.return_code = B.return_code
              JOIN tbl_order C ON B.order_code = C.order_code
              JOIN tbl_franchise D ON C.franchise_code = D.franchise_code
              JOIN tbl_member E ON B.member_code = E.member_code
        WHERE A.return_refund_history_code = #{ returnRefundHistoryCode };
    </select>

    <!-- 타부서 환불처리완료내역 물품 쿼리 -->
    <select id="selectRefundHistoryDetailItemBy" resultMap="refundHistoryDetailItemResultMap">
        SELECT
        B.item_unique_code
        , B.name AS item_name
        , C.name AS sub_category
        , D.name AS super_category
        , H.quantity
        , H.part_sum_price AS refund_price
        , A.completed
        FROM tbl_refund_item_status A
        JOIN tbl_item B ON A.item_code = B.item_code
        JOIN tbl_sub_category C ON B.category_code = C.sub_category_code
        JOIN tbl_super_category D ON C.super_category_code = D.super_category_code
        JOIN tbl_return_refund_history E ON A.return_refund_history_code = E.return_refund_history_code
        JOIN tbl_return F ON E.return_code = F.return_code
        JOIN tbl_order_item H ON H.order_code = F.order_code
        WHERE A.item_code = H.item_code AND E.return_refund_history_code = #{ returnRefundHistoryCode };
    </select>


    <!-- ===== Query 3. 가맹점 반품내역 ===== -->

    <!--  가맹점 반품내역 조회용 cnt 쿼리 -->
    <select id="selectFranReturningListCnt" resultType="int">
        SELECT
        COUNT(*)
        FROM (
        SELECT
        A.return_code
        , B.status
        , C.order_code
        , GROUP_CONCAT(E.name SEPARATOR ', ') AS item_name
        , A.sum_price
        , A.created_at
        , CASE WHEN B.status = 'COMPLETED' THEN B.created_at ELSE NULL END AS completed_at
        FROM tbl_return A
        JOIN tbl_return_status_history B ON A.return_code = B.return_code
        JOIN (
        SELECT return_code, MAX(created_at) AS max_created_at
        FROM tbl_return_status_history
        GROUP BY return_code
        ) latest_status ON B.return_code = latest_status.return_code
        AND B.created_at = latest_status.max_created_at
        JOIN tbl_order C ON A.order_code = C.order_code
        JOIN tbl_return_item D ON A.return_code = D.return_code
        JOIN tbl_item E ON D.item_code = E.item_code
        JOIN tbl_franchise F ON C.franchise_code = F.franchise_code
        WHERE F.franchise_code = ( SELECT B.franchise_code FROM tbl_member A JOIN tbl_franchise_member B ON A.member_code = B.member_code
        WHERE A.id = #{ loginId } )
        GROUP BY A.return_code, A.created_at
        ) AS grouped_result;
    </select>

    <!--  가맹점 반품내역 조회 쿼리 -->
    <select id="selectFranReturningList" resultMap="franReturningListResultMap">
        SELECT
        A.return_code
        , B.status
        , C.order_code
        , GROUP_CONCAT(E.name SEPARATOR ', ') AS item_name
        , A.sum_price
        , A.created_at
        , CASE WHEN B.status = 'COMPLETED' THEN B.created_at ELSE NULL END AS completed_at
        FROM tbl_return A
        JOIN tbl_return_status_history B ON A.return_code = B.return_code
        JOIN (
        SELECT return_code, MAX(created_at) AS max_created_at
        FROM tbl_return_status_history
        GROUP BY return_code
        ) latest_status ON B.return_code = latest_status.return_code
        AND B.created_at = latest_status.max_created_at
        JOIN tbl_order C ON A.order_code = C.order_code
        JOIN tbl_return_item D ON A.return_code = D.return_code
        JOIN tbl_item E ON D.item_code = E.item_code
        JOIN tbl_franchise F ON C.franchise_code = F.franchise_code
        WHERE F.franchise_code = ( SELECT B.franchise_code FROM tbl_member A JOIN tbl_franchise_member B ON A.member_code = B.member_code
        WHERE A.id = #{ loginId })
        GROUP BY A.return_code, A.created_at
        ORDER BY A.created_at DESC
        LIMIT #{ offset }, #{ pageSize };
    </select>

    <!-- 가맹점 반품내역 검색 페이지네이션용 cnt 쿼리 -->
    <select id="selectSearchFranReturningListCnt" resultType="int">
        SELECT
        COUNT(*)
        FROM (
        SELECT
        A.return_code
        , B.status
        , C.order_code
        , GROUP_CONCAT(E.name SEPARATOR ', ') AS item_name
        , A.sum_price
        , A.created_at
        , CASE WHEN B.status = 'COMPLETED' THEN B.created_at ELSE NULL END AS completed_at
        FROM tbl_return A
        JOIN tbl_return_status_history B ON A.return_code = B.return_code
        JOIN (
        SELECT return_code, MAX(created_at) AS max_created_at
        FROM tbl_return_status_history
        GROUP BY return_code
        ) latest_status ON B.return_code = latest_status.return_code
        AND B.created_at = latest_status.max_created_at
        JOIN tbl_order C ON A.order_code = C.order_code
        JOIN tbl_return_item D ON A.return_code = D.return_code
        JOIN tbl_item E ON D.item_code = E.item_code
        JOIN tbl_franchise F ON C.franchise_code = F.franchise_code
        <where>
            F.franchise_code = ( SELECT B.franchise_code FROM tbl_member A JOIN tbl_franchise_member B ON A.member_code = B.member_code WHERE A.id = #{ loginId } )
            <choose>
                <when test="searchFilter == 'returningCode'">
                    AND CAST(A.return_code AS CHAR) LIKE CONCAT('%', #{ searchWord }, '%')
                </when>
                <when test="searchFilter == 'itemName'">
                    AND E.name LIKE CONCAT('%', #{ searchWord }, '%')
                </when>
            </choose>
            <if test="startDate != null and endDate != null">
                AND A.created_at BETWEEN #{ startDate } AND CONCAT(#{ endDate }, ' 23:59:59')
            </if>
        </where>
        GROUP BY A.return_code) AS grouped_list
    </select>

    <!-- 가맹점 반품내역 검색 쿼리 -->
    <select id="selectSearchFranReturningList" resultMap="franReturningListResultMap">
        SELECT
        A.return_code
        , B.status
        , C.order_code
        , GROUP_CONCAT(E.name SEPARATOR ', ') AS item_name
        , A.sum_price
        , A.created_at
        , CASE WHEN B.status = 'COMPLETED' THEN B.created_at ELSE NULL END AS completed_at
        FROM tbl_return A
        JOIN tbl_return_status_history B ON A.return_code = B.return_code
        JOIN (
        SELECT return_code, MAX(created_at) AS max_created_at
        FROM tbl_return_status_history
        GROUP BY return_code
        ) latest_status ON B.return_code = latest_status.return_code
        AND B.created_at = latest_status.max_created_at
        JOIN tbl_order C ON A.order_code = C.order_code
        JOIN tbl_return_item D ON A.return_code = D.return_code
        JOIN tbl_item E ON D.item_code = E.item_code
        JOIN tbl_franchise F ON C.franchise_code = F.franchise_code
        <where>
            F.franchise_code = ( SELECT B.franchise_code FROM tbl_member A JOIN tbl_franchise_member B ON A.member_code = B.member_code WHERE A.id = #{ loginId } )
            <choose>
                <when test="searchFilter == 'returningCode'">
                    AND CAST(A.return_code AS CHAR) LIKE CONCAT('%', #{ searchWord }, '%')
                </when>
                <when test="searchFilter == 'itemName'">
                    AND E.name LIKE CONCAT('%', #{ searchWord }, '%')
                </when>
            </choose>
            <if test="startDate != null and endDate != null">
                AND A.created_at BETWEEN #{ startDate } AND CONCAT(#{ endDate }, ' 23:59:59')
            </if>
        </where>
        GROUP BY A.return_code
        ORDER BY A.created_at DESC
        LIMIT #{ offset }, #{ pageSize };
    </select>

    <!-- 가맹점 반품내역 상세조회 쿼리 -->
    <select id="selectFranReturningDetailBy" resultMap="franReturningDetailResultMap">
        SELECT
        A.return_code
        , A.created_at
        , B.status
        , C.order_code
        , A.reason
        , A.explanation
        FROM tbl_return A
        JOIN tbl_return_status_history B ON A.return_code = B.return_code
        JOIN (
        SELECT return_code, MAX(created_at) AS max_created_at
        FROM tbl_return_status_history
        GROUP BY return_code
        ) latest_status ON B.return_code = latest_status.return_code
        AND B.created_at = latest_status.max_created_at
        JOIN tbl_order C ON A.order_code = C.order_code
        WHERE A.return_code = #{ returningCode }
        GROUP BY A.return_code;
    </select>

    <!-- 가맹점 반품내역 상세조회 - 물품 목록 조회 쿼리 -->
    <select id="selectFranReturningDetailItemBy" resultMap="franReturningDetailItemResultMap">
        SELECT
        A.item_code
        , E.item_unique_code
        , E.name AS item_name
        , D.quantity
        , (D.part_sum_price / D.quantity) AS selling_price
        , D.part_sum_price
        FROM tbl_return_item A
        JOIN tbl_return B ON A.return_code = B.return_code
        JOIN tbl_order C ON B.order_code = C.order_code
        JOIN tbl_order_item D ON C.order_code = D.order_code
        JOIN tbl_item E ON A.item_code = E.item_code
        WHERE A.return_code = #{ returningCode };
    </select>

    <!-- 가맹점 반품내역 상태조회 쿼리 -->
    <select id="selectFranReturningStatusBy" resultMap="franReturningStatusResultMap">
        SELECT
        A.status
        , A.created_at AS processed_at
        FROM tbl_return_status_history A
        WHERE A.return_code = #{ returningCode };
    </select>

    <!-- ===== Query 4. 기타 쿼리 ===== -->

    <!-- 반품코드로 가장 최근 반품상태(status) 1개를 조회하는 쿼리 -->
    <!-- 반품취소 시, 해당 반품요청의 상태가 REQUESTED인지 조회하기 위해 사용 -->
    <select id="selectReturningLatestStatusBy" resultType="com.varc.brewnetapp.common.domain.returning.ReturningStatus">
        SELECT
        A.status
        FROM tbl_return_status_history A
        JOIN (
        SELECT return_code, MAX(created_at) AS max_created_at
        FROM tbl_return_status_history
        GROUP BY return_code
        ) latest_status ON A.return_code = latest_status.return_code
        AND A.created_at = latest_status.max_created_at
        WHERE A.return_code = #{ returningCode }
    </select>

    <!-- 유저 아이디(loginId)와 반품코드(returningCode)로 해당 가맹점의 반품이 맞는지 확인하는 쿼리 -->
    <!-- 가맹점 목록조회/가맹점 상세조회에서 유효한 요청인지 검증하기 위해 사용 -->
    <select id="selectValidReturningByFranchise" resultType="boolean">
        SELECT
        EXISTS(
        SELECT
        *
        FROM tbl_return A
        JOIN tbl_order B ON A.order_code = B.order_code
        JOIN tbl_franchise C ON B.franchise_code = C.franchise_code
        JOIN tbl_franchise_member D ON B.franchise_code= D.franchise_code
        JOIN tbl_member E ON D.member_code = E.member_code
        WHERE A.return_code = #{ returningCode } AND E.id = #{ loginId }
        ) AS result;
    </select>

    <!-- 유저 아이디(loginId)와 주문코드(orderCode)로 해당 가맹점의 주문이 맞는지 확인하는 쿼리 -->
    <!-- 가맹점 반품신청 시 유효한 요청인지 검증하기 위해 사용 -->
    <select id="selectValidOrderByFranchise" resultType="boolean">
        SELECT
        EXISTS(
        SELECT
        *
        FROM tbl_order A
        JOIN tbl_franchise B ON A.franchise_code = B.franchise_code
        JOIN tbl_franchise_member C ON A.franchise_code= C.franchise_code
        JOIN tbl_member D ON C.member_code = D.member_code
        WHERE A.order_code = #{ orderCode } AND D.id = #{ loginId }
        ) AS result;
    </select>

    <!-- 유저 아이디(loginId)로 반품신청 가능한 주문코드 목록을 찾는 쿼리 -->
    <!-- 가맹점 반품신청 시 반품신청 가능한 주문 목록 찾기 위해 사용(주문에 반품신청 가능한 물품이 1건 이상인 경우에 포함됨) -->
    <select id="selectAvailableReturningBy" resultType="Integer">
        SELECT
        A.order_code
        FROM tbl_order_item A
        JOIN tbl_item B ON A.item_code = B.item_code
        JOIN tbl_order C ON A.order_code = C.order_code
        JOIN tbl_franchise_member D ON C.franchise_code = D.franchise_code
        JOIN tbl_member E ON D.member_code = E.member_code
        WHERE A.available = 'AVAILABLE' AND E.id = #{ loginId }
        GROUP BY C.order_code
        HAVING COUNT(A.item_code) > 0;
    </select>

    <select id="selectAvailableReturningItemBy" resultMap="franReturningDetailItemResultMap">
        SELECT
        A.item_code
        , B.item_unique_code
        , B.name AS item_name
        , A.quantity
        , (A.part_sum_price / A.quantity) AS selling_price
        , A.part_sum_price
        FROM tbl_order_item A
        JOIN tbl_item B ON A.item_code = B.item_code
        JOIN tbl_order C ON A.order_code = C.order_code
        WHERE A.available = 'AVAILABLE' AND A.order_code = #{ orderCode };
    </select>

</mapper>